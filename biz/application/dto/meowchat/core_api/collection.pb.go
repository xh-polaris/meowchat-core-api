// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: meowchat/core_api/collection.proto

package core_api

import (
	basic "github.com/xh-polaris/meowchat-core-api/biz/application/dto/basic"
	content "github.com/xh-polaris/meowchat-core-api/biz/application/dto/meowchat/content"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CatPreview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" form:"id" query:"id"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name" form:"name" query:"name"`
	Area        string `protobuf:"bytes,3,opt,name=area,proto3" json:"area" form:"area" query:"area"`
	Color       string `protobuf:"bytes,4,opt,name=color,proto3" json:"color" form:"color" query:"color"`
	AvatarUrl   string `protobuf:"bytes,5,opt,name=avatarUrl,proto3" json:"avatarUrl" form:"avatarUrl" query:"avatarUrl"`
	IsCollected *bool  `protobuf:"varint,6,opt,name=isCollected,proto3,oneof" json:"isCollected" form:"isCollected" query:"isCollected"`
}

func (x *CatPreview) Reset() {
	*x = CatPreview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_core_api_collection_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CatPreview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatPreview) ProtoMessage() {}

func (x *CatPreview) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_core_api_collection_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatPreview.ProtoReflect.Descriptor instead.
func (*CatPreview) Descriptor() ([]byte, []int) {
	return file_meowchat_core_api_collection_proto_rawDescGZIP(), []int{0}
}

func (x *CatPreview) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CatPreview) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CatPreview) GetArea() string {
	if x != nil {
		return x.Area
	}
	return ""
}

func (x *CatPreview) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *CatPreview) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *CatPreview) GetIsCollected() bool {
	if x != nil && x.IsCollected != nil {
		return *x.IsCollected
	}
	return false
}

type Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" form:"id" query:"id"`
	Url     string `protobuf:"bytes,2,opt,name=url,proto3" json:"url" form:"url" query:"url"`
	CatId   string `protobuf:"bytes,3,opt,name=catId,proto3" json:"catId" form:"catId" query:"catId"`
	Likes   *int64 `protobuf:"varint,4,opt,name=likes,proto3,oneof" json:"likes" form:"likes" query:"likes"`
	IsLiked *bool  `protobuf:"varint,5,opt,name=isLiked,proto3,oneof" json:"isLiked" form:"isLiked" query:"isLiked"`
}

func (x *Image) Reset() {
	*x = Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_core_api_collection_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_core_api_collection_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_meowchat_core_api_collection_proto_rawDescGZIP(), []int{1}
}

func (x *Image) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Image) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Image) GetCatId() string {
	if x != nil {
		return x.CatId
	}
	return ""
}

func (x *Image) GetLikes() int64 {
	if x != nil && x.Likes != nil {
		return *x.Likes
	}
	return 0
}

func (x *Image) GetIsLiked() bool {
	if x != nil && x.IsLiked != nil {
		return *x.IsLiked
	}
	return false
}

type GetCatPreviewsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyword          *string                  `protobuf:"bytes,1,opt,name=keyword,proto3,oneof" json:"keyword" form:"keyword" query:"keyword"`
	PaginationOption *basic.PaginationOptions `protobuf:"bytes,2,opt,name=paginationOption,proto3" json:"paginationOption" form:"paginationOption" query:"paginationOption"`
	CommunityId      string                   `protobuf:"bytes,3,opt,name=communityId,proto3" json:"communityId" form:"communityId" query:"communityId"`
}

func (x *GetCatPreviewsReq) Reset() {
	*x = GetCatPreviewsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_core_api_collection_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCatPreviewsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCatPreviewsReq) ProtoMessage() {}

func (x *GetCatPreviewsReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_core_api_collection_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCatPreviewsReq.ProtoReflect.Descriptor instead.
func (*GetCatPreviewsReq) Descriptor() ([]byte, []int) {
	return file_meowchat_core_api_collection_proto_rawDescGZIP(), []int{2}
}

func (x *GetCatPreviewsReq) GetKeyword() string {
	if x != nil && x.Keyword != nil {
		return *x.Keyword
	}
	return ""
}

func (x *GetCatPreviewsReq) GetPaginationOption() *basic.PaginationOptions {
	if x != nil {
		return x.PaginationOption
	}
	return nil
}

func (x *GetCatPreviewsReq) GetCommunityId() string {
	if x != nil {
		return x.CommunityId
	}
	return ""
}

type GetCatPreviewsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cats  []*CatPreview `protobuf:"bytes,1,rep,name=cats,proto3" json:"cats" form:"cats" query:"cats"`
	Total int64         `protobuf:"varint,2,opt,name=total,proto3" json:"total" form:"total" query:"total"`
}

func (x *GetCatPreviewsResp) Reset() {
	*x = GetCatPreviewsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_core_api_collection_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCatPreviewsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCatPreviewsResp) ProtoMessage() {}

func (x *GetCatPreviewsResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_core_api_collection_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCatPreviewsResp.ProtoReflect.Descriptor instead.
func (*GetCatPreviewsResp) Descriptor() ([]byte, []int) {
	return file_meowchat_core_api_collection_proto_rawDescGZIP(), []int{3}
}

func (x *GetCatPreviewsResp) GetCats() []*CatPreview {
	if x != nil {
		return x.Cats
	}
	return nil
}

func (x *GetCatPreviewsResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetCatDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CatId string `protobuf:"bytes,1,opt,name=catId,proto3" json:"catId" form:"catId" query:"catId"`
}

func (x *GetCatDetailReq) Reset() {
	*x = GetCatDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_core_api_collection_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCatDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCatDetailReq) ProtoMessage() {}

func (x *GetCatDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_core_api_collection_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCatDetailReq.ProtoReflect.Descriptor instead.
func (*GetCatDetailReq) Descriptor() ([]byte, []int) {
	return file_meowchat_core_api_collection_proto_rawDescGZIP(), []int{4}
}

func (x *GetCatDetailReq) GetCatId() string {
	if x != nil {
		return x.CatId
	}
	return ""
}

type GetCatDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cat *content.Cat `protobuf:"bytes,1,opt,name=cat,proto3" json:"cat" form:"cat" query:"cat"`
}

func (x *GetCatDetailResp) Reset() {
	*x = GetCatDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_core_api_collection_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCatDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCatDetailResp) ProtoMessage() {}

func (x *GetCatDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_core_api_collection_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCatDetailResp.ProtoReflect.Descriptor instead.
func (*GetCatDetailResp) Descriptor() ([]byte, []int) {
	return file_meowchat_core_api_collection_proto_rawDescGZIP(), []int{5}
}

func (x *GetCatDetailResp) GetCat() *content.Cat {
	if x != nil {
		return x.Cat
	}
	return nil
}

type DeleteCatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CatId string `protobuf:"bytes,1,opt,name=catId,proto3" json:"catId" form:"catId" query:"catId"`
}

func (x *DeleteCatReq) Reset() {
	*x = DeleteCatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_core_api_collection_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCatReq) ProtoMessage() {}

func (x *DeleteCatReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_core_api_collection_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCatReq.ProtoReflect.Descriptor instead.
func (*DeleteCatReq) Descriptor() ([]byte, []int) {
	return file_meowchat_core_api_collection_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteCatReq) GetCatId() string {
	if x != nil {
		return x.CatId
	}
	return ""
}

type DeleteCatResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteCatResp) Reset() {
	*x = DeleteCatResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_core_api_collection_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCatResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCatResp) ProtoMessage() {}

func (x *DeleteCatResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_core_api_collection_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCatResp.ProtoReflect.Descriptor instead.
func (*DeleteCatResp) Descriptor() ([]byte, []int) {
	return file_meowchat_core_api_collection_proto_rawDescGZIP(), []int{7}
}

type NewCatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           *string  `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id" form:"id" query:"id"`
	Age          string   `protobuf:"bytes,2,opt,name=age,proto3" json:"age" form:"age" query:"age"`
	CommunityId  string   `protobuf:"bytes,3,opt,name=communityId,proto3" json:"communityId" form:"communityId" query:"communityId"`
	Color        string   `protobuf:"bytes,4,opt,name=color,proto3" json:"color" form:"color" query:"color"`
	Details      string   `protobuf:"bytes,5,opt,name=details,proto3" json:"details" form:"details" query:"details"`
	Name         string   `protobuf:"bytes,6,opt,name=name,proto3" json:"name" form:"name" query:"name"`
	Sex          string   `protobuf:"bytes,7,opt,name=sex,proto3" json:"sex" form:"sex" query:"sex"`
	Area         string   `protobuf:"bytes,8,opt,name=area,proto3" json:"area" form:"area" query:"area"`
	IsSnipped    bool     `protobuf:"varint,9,opt,name=isSnipped,proto3" json:"isSnipped" form:"isSnipped" query:"isSnipped"`
	IsSterilized bool     `protobuf:"varint,10,opt,name=isSterilized,proto3" json:"isSterilized" form:"isSterilized" query:"isSterilized"`
	Avatars      []string `protobuf:"bytes,11,rep,name=avatars,proto3" json:"avatars" form:"avatars" query:"avatars"`
}

func (x *NewCatReq) Reset() {
	*x = NewCatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_core_api_collection_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewCatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewCatReq) ProtoMessage() {}

func (x *NewCatReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_core_api_collection_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewCatReq.ProtoReflect.Descriptor instead.
func (*NewCatReq) Descriptor() ([]byte, []int) {
	return file_meowchat_core_api_collection_proto_rawDescGZIP(), []int{8}
}

func (x *NewCatReq) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *NewCatReq) GetAge() string {
	if x != nil {
		return x.Age
	}
	return ""
}

func (x *NewCatReq) GetCommunityId() string {
	if x != nil {
		return x.CommunityId
	}
	return ""
}

func (x *NewCatReq) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *NewCatReq) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

func (x *NewCatReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NewCatReq) GetSex() string {
	if x != nil {
		return x.Sex
	}
	return ""
}

func (x *NewCatReq) GetArea() string {
	if x != nil {
		return x.Area
	}
	return ""
}

func (x *NewCatReq) GetIsSnipped() bool {
	if x != nil {
		return x.IsSnipped
	}
	return false
}

func (x *NewCatReq) GetIsSterilized() bool {
	if x != nil {
		return x.IsSterilized
	}
	return false
}

func (x *NewCatReq) GetAvatars() []string {
	if x != nil {
		return x.Avatars
	}
	return nil
}

type NewCatResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CatId string `protobuf:"bytes,1,opt,name=catId,proto3" json:"catId" form:"catId" query:"catId"`
}

func (x *NewCatResp) Reset() {
	*x = NewCatResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_core_api_collection_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewCatResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewCatResp) ProtoMessage() {}

func (x *NewCatResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_core_api_collection_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewCatResp.ProtoReflect.Descriptor instead.
func (*NewCatResp) Descriptor() ([]byte, []int) {
	return file_meowchat_core_api_collection_proto_rawDescGZIP(), []int{9}
}

func (x *NewCatResp) GetCatId() string {
	if x != nil {
		return x.CatId
	}
	return ""
}

type SearchCatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyword          string                   `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword" form:"keyword" query:"keyword"`
	PaginationOption *basic.PaginationOptions `protobuf:"bytes,2,opt,name=paginationOption,proto3" json:"paginationOption" form:"paginationOption" query:"paginationOption"`
	CommunityId      string                   `protobuf:"bytes,3,opt,name=communityId,proto3" json:"communityId" form:"communityId" query:"communityId"`
}

func (x *SearchCatReq) Reset() {
	*x = SearchCatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_core_api_collection_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchCatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCatReq) ProtoMessage() {}

func (x *SearchCatReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_core_api_collection_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCatReq.ProtoReflect.Descriptor instead.
func (*SearchCatReq) Descriptor() ([]byte, []int) {
	return file_meowchat_core_api_collection_proto_rawDescGZIP(), []int{10}
}

func (x *SearchCatReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *SearchCatReq) GetPaginationOption() *basic.PaginationOptions {
	if x != nil {
		return x.PaginationOption
	}
	return nil
}

func (x *SearchCatReq) GetCommunityId() string {
	if x != nil {
		return x.CommunityId
	}
	return ""
}

type SearchCatResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cats  []*CatPreview `protobuf:"bytes,1,rep,name=cats,proto3" json:"cats" form:"cats" query:"cats"`
	Total int64         `protobuf:"varint,2,opt,name=total,proto3" json:"total" form:"total" query:"total"`
}

func (x *SearchCatResp) Reset() {
	*x = SearchCatResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_core_api_collection_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchCatResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCatResp) ProtoMessage() {}

func (x *SearchCatResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_core_api_collection_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCatResp.ProtoReflect.Descriptor instead.
func (*SearchCatResp) Descriptor() ([]byte, []int) {
	return file_meowchat_core_api_collection_proto_rawDescGZIP(), []int{11}
}

func (x *SearchCatResp) GetCats() []*CatPreview {
	if x != nil {
		return x.Cats
	}
	return nil
}

func (x *SearchCatResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type CreateImageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Images []*content.CreateImageElement `protobuf:"bytes,1,rep,name=images,proto3" json:"images" form:"images" query:"images"`
}

func (x *CreateImageReq) Reset() {
	*x = CreateImageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_core_api_collection_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateImageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateImageReq) ProtoMessage() {}

func (x *CreateImageReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_core_api_collection_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateImageReq.ProtoReflect.Descriptor instead.
func (*CreateImageReq) Descriptor() ([]byte, []int) {
	return file_meowchat_core_api_collection_proto_rawDescGZIP(), []int{12}
}

func (x *CreateImageReq) GetImages() []*content.CreateImageElement {
	if x != nil {
		return x.Images
	}
	return nil
}

type CreateImageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageIds []string `protobuf:"bytes,1,rep,name=imageIds,proto3" json:"imageIds" form:"imageIds" query:"imageIds"`
}

func (x *CreateImageResp) Reset() {
	*x = CreateImageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_core_api_collection_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateImageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateImageResp) ProtoMessage() {}

func (x *CreateImageResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_core_api_collection_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateImageResp.ProtoReflect.Descriptor instead.
func (*CreateImageResp) Descriptor() ([]byte, []int) {
	return file_meowchat_core_api_collection_proto_rawDescGZIP(), []int{13}
}

func (x *CreateImageResp) GetImageIds() []string {
	if x != nil {
		return x.ImageIds
	}
	return nil
}

type DeleteImageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageId string `protobuf:"bytes,1,opt,name=imageId,proto3" json:"imageId" form:"imageId" query:"imageId"`
}

func (x *DeleteImageReq) Reset() {
	*x = DeleteImageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_core_api_collection_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteImageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteImageReq) ProtoMessage() {}

func (x *DeleteImageReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_core_api_collection_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteImageReq.ProtoReflect.Descriptor instead.
func (*DeleteImageReq) Descriptor() ([]byte, []int) {
	return file_meowchat_core_api_collection_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteImageReq) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

type DeleteImageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteImageResp) Reset() {
	*x = DeleteImageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_core_api_collection_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteImageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteImageResp) ProtoMessage() {}

func (x *DeleteImageResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_core_api_collection_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteImageResp.ProtoReflect.Descriptor instead.
func (*DeleteImageResp) Descriptor() ([]byte, []int) {
	return file_meowchat_core_api_collection_proto_rawDescGZIP(), []int{15}
}

type GetImageByCatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CatId    string  `protobuf:"bytes,1,opt,name=catId,proto3" json:"catId" form:"catId" query:"catId"`
	PrevId   *string `protobuf:"bytes,2,opt,name=prevId,proto3,oneof" json:"prevId" form:"prevId" query:"prevId"`
	Limit    int64   `protobuf:"varint,3,opt,name=limit,proto3" json:"limit" form:"limit" query:"limit"`
	Offset   int64   `protobuf:"varint,4,opt,name=offset,proto3" json:"offset" form:"offset" query:"offset"`
	Backward bool    `protobuf:"varint,5,opt,name=backward,proto3" json:"backward" form:"backward" query:"backward"`
}

func (x *GetImageByCatReq) Reset() {
	*x = GetImageByCatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_core_api_collection_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetImageByCatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetImageByCatReq) ProtoMessage() {}

func (x *GetImageByCatReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_core_api_collection_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetImageByCatReq.ProtoReflect.Descriptor instead.
func (*GetImageByCatReq) Descriptor() ([]byte, []int) {
	return file_meowchat_core_api_collection_proto_rawDescGZIP(), []int{16}
}

func (x *GetImageByCatReq) GetCatId() string {
	if x != nil {
		return x.CatId
	}
	return ""
}

func (x *GetImageByCatReq) GetPrevId() string {
	if x != nil && x.PrevId != nil {
		return *x.PrevId
	}
	return ""
}

func (x *GetImageByCatReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetImageByCatReq) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetImageByCatReq) GetBackward() bool {
	if x != nil {
		return x.Backward
	}
	return false
}

type GetImageByCatResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Images []*Image `protobuf:"bytes,1,rep,name=images,proto3" json:"images" form:"images" query:"images"`
	Total  int64    `protobuf:"varint,2,opt,name=total,proto3" json:"total" form:"total" query:"total"`
}

func (x *GetImageByCatResp) Reset() {
	*x = GetImageByCatResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_core_api_collection_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetImageByCatResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetImageByCatResp) ProtoMessage() {}

func (x *GetImageByCatResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_core_api_collection_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetImageByCatResp.ProtoReflect.Descriptor instead.
func (*GetImageByCatResp) Descriptor() ([]byte, []int) {
	return file_meowchat_core_api_collection_proto_rawDescGZIP(), []int{17}
}

func (x *GetImageByCatResp) GetImages() []*Image {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *GetImageByCatResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_meowchat_core_api_collection_proto protoreflect.FileDescriptor

var file_meowchat_core_api_collection_proto_rawDesc = []byte{
	0x0a, 0x22, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x5f,
	0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x1a, 0x1d, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61,
	0x74, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2f, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaf,
	0x01, 0x0a, 0x0a, 0x43, 0x61, 0x74, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x25, 0x0a, 0x0b, 0x69, 0x73, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00,
	0x52, 0x0b, 0x69, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x69, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x22, 0x8f, 0x01, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x61, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x61, 0x74,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x05, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x00, 0x52, 0x05, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a,
	0x07, 0x69, 0x73, 0x4c, 0x69, 0x6b, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01,
	0x52, 0x07, 0x69, 0x73, 0x4c, 0x69, 0x6b, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x69, 0x73, 0x4c, 0x69, 0x6b,
	0x65, 0x64, 0x22, 0xa6, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x50, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x6b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x44, 0x0a, 0x10, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x10, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x49, 0x64, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x5d, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x43, 0x61, 0x74, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x31, 0x0a, 0x04, 0x63, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x43, 0x61, 0x74, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x04,
	0x63, 0x61, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x27, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x43, 0x61, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x61, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x61,
	0x74, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x27, 0x0a, 0x03, 0x63, 0x61, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x61, 0x74, 0x52, 0x03, 0x63, 0x61, 0x74,
	0x22, 0x24, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x63, 0x61, 0x74, 0x49, 0x64, 0x22, 0x0f, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0xa1, 0x02, 0x0a, 0x09, 0x4e, 0x65, 0x77, 0x43,
	0x61, 0x74, 0x52, 0x65, 0x71, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x73, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x53, 0x6e,
	0x69, 0x70, 0x70, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53,
	0x6e, 0x69, 0x70, 0x70, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x53, 0x74, 0x65, 0x72,
	0x69, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73,
	0x53, 0x74, 0x65, 0x72, 0x69, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x73, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x22, 0x22, 0x0a, 0x0a, 0x4e,
	0x65, 0x77, 0x43, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x61, 0x74, 0x49, 0x64, 0x22,
	0x90, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x61, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x44, 0x0a, 0x10, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x10,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x22, 0x58, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x61, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x04, 0x63, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x61, 0x74, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x52, 0x04, 0x63, 0x61, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x4e, 0x0a, 0x0e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x3c,
	0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x45, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x22, 0x2d, 0x0a, 0x0f,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x73, 0x22, 0x2a, 0x0a, 0x0e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a,
	0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x9a, 0x01, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x79, 0x43, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x61, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x63, 0x61, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x76, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x70, 0x72, 0x65, 0x76, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x62, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x70, 0x72, 0x65, 0x76, 0x49, 0x64, 0x22, 0x5b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x42, 0x79, 0x43, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x06,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d,
	0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x42, 0x89, 0x01, 0x0a, 0x25, 0x63, 0x6f, 0x6d, 0x2e, 0x78, 0x68, 0x70,
	0x6f, 0x6c, 0x61, 0x72, 0x69, 0x73, 0x2e, 0x69, 0x64, 0x6c, 0x67, 0x65, 0x6e, 0x2e, 0x6d, 0x65,
	0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x61, 0x70, 0x69, 0x42, 0x0f,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x4d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x78, 0x68,
	0x2d, 0x70, 0x6f, 0x6c, 0x61, 0x72, 0x69, 0x73, 0x2f, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61,
	0x74, 0x2d, 0x63, 0x6f, 0x72, 0x65, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x69, 0x7a, 0x2f, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x64, 0x74, 0x6f, 0x2f, 0x6d,
	0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x70, 0x69,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_meowchat_core_api_collection_proto_rawDescOnce sync.Once
	file_meowchat_core_api_collection_proto_rawDescData = file_meowchat_core_api_collection_proto_rawDesc
)

func file_meowchat_core_api_collection_proto_rawDescGZIP() []byte {
	file_meowchat_core_api_collection_proto_rawDescOnce.Do(func() {
		file_meowchat_core_api_collection_proto_rawDescData = protoimpl.X.CompressGZIP(file_meowchat_core_api_collection_proto_rawDescData)
	})
	return file_meowchat_core_api_collection_proto_rawDescData
}

var file_meowchat_core_api_collection_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_meowchat_core_api_collection_proto_goTypes = []interface{}{
	(*CatPreview)(nil),                 // 0: meowchat.core_api.CatPreview
	(*Image)(nil),                      // 1: meowchat.core_api.Image
	(*GetCatPreviewsReq)(nil),          // 2: meowchat.core_api.GetCatPreviewsReq
	(*GetCatPreviewsResp)(nil),         // 3: meowchat.core_api.GetCatPreviewsResp
	(*GetCatDetailReq)(nil),            // 4: meowchat.core_api.GetCatDetailReq
	(*GetCatDetailResp)(nil),           // 5: meowchat.core_api.GetCatDetailResp
	(*DeleteCatReq)(nil),               // 6: meowchat.core_api.DeleteCatReq
	(*DeleteCatResp)(nil),              // 7: meowchat.core_api.DeleteCatResp
	(*NewCatReq)(nil),                  // 8: meowchat.core_api.NewCatReq
	(*NewCatResp)(nil),                 // 9: meowchat.core_api.NewCatResp
	(*SearchCatReq)(nil),               // 10: meowchat.core_api.SearchCatReq
	(*SearchCatResp)(nil),              // 11: meowchat.core_api.SearchCatResp
	(*CreateImageReq)(nil),             // 12: meowchat.core_api.CreateImageReq
	(*CreateImageResp)(nil),            // 13: meowchat.core_api.CreateImageResp
	(*DeleteImageReq)(nil),             // 14: meowchat.core_api.DeleteImageReq
	(*DeleteImageResp)(nil),            // 15: meowchat.core_api.DeleteImageResp
	(*GetImageByCatReq)(nil),           // 16: meowchat.core_api.GetImageByCatReq
	(*GetImageByCatResp)(nil),          // 17: meowchat.core_api.GetImageByCatResp
	(*basic.PaginationOptions)(nil),    // 18: basic.PaginationOptions
	(*content.Cat)(nil),                // 19: meowchat.content.Cat
	(*content.CreateImageElement)(nil), // 20: meowchat.content.CreateImageElement
}
var file_meowchat_core_api_collection_proto_depIdxs = []int32{
	18, // 0: meowchat.core_api.GetCatPreviewsReq.paginationOption:type_name -> basic.PaginationOptions
	0,  // 1: meowchat.core_api.GetCatPreviewsResp.cats:type_name -> meowchat.core_api.CatPreview
	19, // 2: meowchat.core_api.GetCatDetailResp.cat:type_name -> meowchat.content.Cat
	18, // 3: meowchat.core_api.SearchCatReq.paginationOption:type_name -> basic.PaginationOptions
	0,  // 4: meowchat.core_api.SearchCatResp.cats:type_name -> meowchat.core_api.CatPreview
	20, // 5: meowchat.core_api.CreateImageReq.images:type_name -> meowchat.content.CreateImageElement
	1,  // 6: meowchat.core_api.GetImageByCatResp.images:type_name -> meowchat.core_api.Image
	7,  // [7:7] is the sub-list for method output_type
	7,  // [7:7] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}


func file_meowchat_core_api_collection_proto_init() {
	if File_meowchat_core_api_collection_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_meowchat_core_api_collection_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CatPreview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_core_api_collection_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_core_api_collection_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCatPreviewsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_core_api_collection_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCatPreviewsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_core_api_collection_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCatDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_core_api_collection_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCatDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_core_api_collection_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_core_api_collection_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCatResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_core_api_collection_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewCatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_core_api_collection_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewCatResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_core_api_collection_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchCatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_core_api_collection_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchCatResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_core_api_collection_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateImageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_core_api_collection_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateImageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_core_api_collection_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteImageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_core_api_collection_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteImageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_core_api_collection_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetImageByCatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_core_api_collection_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetImageByCatResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_meowchat_core_api_collection_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_meowchat_core_api_collection_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_meowchat_core_api_collection_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_meowchat_core_api_collection_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_meowchat_core_api_collection_proto_msgTypes[16].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_meowchat_core_api_collection_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_meowchat_core_api_collection_proto_goTypes,
		DependencyIndexes: file_meowchat_core_api_collection_proto_depIdxs,
		MessageInfos:      file_meowchat_core_api_collection_proto_msgTypes,
	}.Build()
	File_meowchat_core_api_collection_proto = out.File
	file_meowchat_core_api_collection_proto_rawDesc = nil
	file_meowchat_core_api_collection_proto_goTypes = nil
	file_meowchat_core_api_collection_proto_depIdxs = nil
}
